(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>m});var o=t(354),i=t.n(o),r=t(314),d=t.n(r),a=t(417),l=t.n(a),c=new URL(t(296),t.b),A=new URL(t(585),t.b),p=d()(i()),s=l()(c),g=l()(A);p.push([n.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${s});\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Bold';\n    src: url(${g});\n    font-weight: 900;\n    font-style: normal;\n}\n\n*,  *::before, *::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', system-ui;\n}\n\nbutton:hover {\n    cursor: pointer;\n}\n\n.container {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: clamp(150px, 20vw, 200px) 1fr;\n    grid-template-rows: min-content 1fr;\n}\n\n\n/* Styling Dialogs */\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 2rem 3rem;\n    display: grid;\n}\n\ndialog > button {\n    margin-top: .5rem;\n    height: 1.5rem;\n    justify-self: center;\n}\n\ndialog > .dialog-title {\n    font-size: 1.5rem;\n    font-weight: 900;\n    font-family: 'Roboto-Bold', system-ui;\n    margin-bottom: .5rem;\n}\n\ndialog.to-do-dialog {\n    gap: .5rem;\n    grid-template-columns: min-content 1fr;\n}\n\ndialog.info-dialog {\n    width: clamp(50ch, 60vw, 70ch);\n}\n\ndialog.to-do-dialog > div.dialog-title,\ndialog.project-dialog > div.dialog-title {\n    grid-column: 1/3;\n}\n\ndialog.to-do-dialog > button.create-to-do,\ndialog.project-dialog > button.create-project {\n    width: 15ch;\n}\n\ndialog.to-do-dialog > input[type=date],\ndialog.to-do-dialog > select {\n    padding-left: 1ch;\n}\n\ndialog > button.close-dialog {\n    width: 9ch;    \n}\n\ndialog.info-dialog,\ndialog.project-dialog {\n    gap: .5rem;\n}\n\ndialog.project-dialog {\n    grid-template-columns: min-content 1fr;\n}\n\ndialog.project-dialog > label {\n    text-wrap: nowrap;\n}\n\n\n/* Styling sidebar */\n\n.sidebar {\n    grid-column: 1/2;\n    grid-row: 1/3;\n    background-color: #fca5a5;\n}\n\ndiv.sidebar {\n    padding: 1.5rem 1rem;\n}\n\n.sidebar-project {\n    width: 100%;\n    list-style-type: none;\n    margin-bottom: .2rem;\n    padding: .2rem .8rem;\n    overflow: hidden;\n    color: white;\n    border-radius: 1rem;\n    font-size: 1rem;\n}\n\n.sidebar-project:hover {\n    cursor: pointer;\n}\n\n.sidebar-active-project {\n    background-color: #c27e7e;\n}\n\ndiv.sidebar > button {\n    display: block;\n    font-size: 1rem;\n    margin-left: .8rem;\n    margin-bottom: 1rem;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    color: white\n\n}\n\ndiv.sidebar > button.add-project {\n    color: #b91c1c;\n    background-color: #fee2e2;\n    padding: .5rem 1rem;\n    border-radius: 1rem;\n}\n\n/* Site layout */\n\n\nheader {\n    font-family: 'Roboto-Bold';\n    font-weight: 900;\n    font-size: 2rem;\n    grid-column: 2/3;\n    grid-row: 1/2;\n    padding: 1rem 1.5rem;\n    background-color: #ef4444;\n    color: white;\n}\n\nmain {\n    grid-column: 2/3;\n    grid-row: 2/3;\n    background-color: #fef2f2;\n    padding: 2rem 3rem;\n}\n\n\n/* Main Layout */\n\n.project-ribbon {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 1rem;\n}\n\ndiv.project-actions {\n    margin-left: auto;\n}\n\ndiv.project-actions > button {\n    margin-left: 1rem;\n    height: 1.5rem;\n    width: 14ch;\n}\n\n.project-name-title {\n    font-family: 'Roboto-Bold';\n    font-size: 1.5rem;\n}\n\n.to-do-item {\n    display: grid;\n    grid-template-columns: min-content auto min-content min-content;\n    grid-template-rows: 1fr 1fr;\n    margin-bottom: 1rem;\n    height: 4rem;\n    background-color: #fff7ed;\n    border-radius: 8px;\n}\n\n.to-do-item > button {\n    grid-row: 1/3;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n    font-size: 1.3rem;\n    margin-left: 1rem;\n}\n\n.to-do-item > button:first-of-type,\n.to-do-item > button:last-of-type {\n    margin-right: 1rem;\n}\n\n.to-do-title {\n    font-family: 'Roboto-Bold';\n    font-weight: 700;\n    align-self: end;\n}\n\n.to-do-due-date {\n    grid-row: 2/3;\n    grid-column: 2/3;\n}\n\n.to-do-completed {\n    color: darkseagreen;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAgC;IAChC,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;IAC1B,4CAA6B;IAC7B,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,gCAAgC;AACpC;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,oDAAoD;IACpD,mCAAmC;AACvC;;;AAGA,oBAAoB;;AAEpB;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,qCAAqC;IACrC,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,sCAAsC;AAC1C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;;IAEI,WAAW;AACf;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,UAAU;AACd;;AAEA;;IAEI,UAAU;AACd;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,iBAAiB;AACrB;;;AAGA,oBAAoB;;AAEpB;IACI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,qBAAqB;IACrB,oBAAoB;IACpB,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,kCAAkC;IAClC,YAAY;IACZ;;AAEJ;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;;;AAGhB;IACI,0BAA0B;IAC1B,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,oBAAoB;IACpB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,kBAAkB;AACtB;;;AAGA,gBAAgB;;AAEhB;IACI,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,cAAc;IACd,WAAW;AACf;;AAEA;IACI,0BAA0B;IAC1B,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,+DAA+D;IAC/D,2BAA2B;IAC3B,mBAAmB;IACnB,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,kCAAkC;IAClC,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;IAC1B,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url(\"./Roboto-Regular.ttf\");\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Bold';\n    src: url(\"./Roboto-Bold.ttf\");\n    font-weight: 900;\n    font-style: normal;\n}\n\n*,  *::before, *::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', system-ui;\n}\n\nbutton:hover {\n    cursor: pointer;\n}\n\n.container {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: clamp(150px, 20vw, 200px) 1fr;\n    grid-template-rows: min-content 1fr;\n}\n\n\n/* Styling Dialogs */\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 2rem 3rem;\n    display: grid;\n}\n\ndialog > button {\n    margin-top: .5rem;\n    height: 1.5rem;\n    justify-self: center;\n}\n\ndialog > .dialog-title {\n    font-size: 1.5rem;\n    font-weight: 900;\n    font-family: 'Roboto-Bold', system-ui;\n    margin-bottom: .5rem;\n}\n\ndialog.to-do-dialog {\n    gap: .5rem;\n    grid-template-columns: min-content 1fr;\n}\n\ndialog.info-dialog {\n    width: clamp(50ch, 60vw, 70ch);\n}\n\ndialog.to-do-dialog > div.dialog-title,\ndialog.project-dialog > div.dialog-title {\n    grid-column: 1/3;\n}\n\ndialog.to-do-dialog > button.create-to-do,\ndialog.project-dialog > button.create-project {\n    width: 15ch;\n}\n\ndialog.to-do-dialog > input[type=date],\ndialog.to-do-dialog > select {\n    padding-left: 1ch;\n}\n\ndialog > button.close-dialog {\n    width: 9ch;    \n}\n\ndialog.info-dialog,\ndialog.project-dialog {\n    gap: .5rem;\n}\n\ndialog.project-dialog {\n    grid-template-columns: min-content 1fr;\n}\n\ndialog.project-dialog > label {\n    text-wrap: nowrap;\n}\n\n\n/* Styling sidebar */\n\n.sidebar {\n    grid-column: 1/2;\n    grid-row: 1/3;\n    background-color: #fca5a5;\n}\n\ndiv.sidebar {\n    padding: 1.5rem 1rem;\n}\n\n.sidebar-project {\n    width: 100%;\n    list-style-type: none;\n    margin-bottom: .2rem;\n    padding: .2rem .8rem;\n    overflow: hidden;\n    color: white;\n    border-radius: 1rem;\n    font-size: 1rem;\n}\n\n.sidebar-project:hover {\n    cursor: pointer;\n}\n\n.sidebar-active-project {\n    background-color: #c27e7e;\n}\n\ndiv.sidebar > button {\n    display: block;\n    font-size: 1rem;\n    margin-left: .8rem;\n    margin-bottom: 1rem;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    color: white\n\n}\n\ndiv.sidebar > button.add-project {\n    color: #b91c1c;\n    background-color: #fee2e2;\n    padding: .5rem 1rem;\n    border-radius: 1rem;\n}\n\n/* Site layout */\n\n\nheader {\n    font-family: 'Roboto-Bold';\n    font-weight: 900;\n    font-size: 2rem;\n    grid-column: 2/3;\n    grid-row: 1/2;\n    padding: 1rem 1.5rem;\n    background-color: #ef4444;\n    color: white;\n}\n\nmain {\n    grid-column: 2/3;\n    grid-row: 2/3;\n    background-color: #fef2f2;\n    padding: 2rem 3rem;\n}\n\n\n/* Main Layout */\n\n.project-ribbon {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 1rem;\n}\n\ndiv.project-actions {\n    margin-left: auto;\n}\n\ndiv.project-actions > button {\n    margin-left: 1rem;\n    height: 1.5rem;\n    width: 14ch;\n}\n\n.project-name-title {\n    font-family: 'Roboto-Bold';\n    font-size: 1.5rem;\n}\n\n.to-do-item {\n    display: grid;\n    grid-template-columns: min-content auto min-content min-content;\n    grid-template-rows: 1fr 1fr;\n    margin-bottom: 1rem;\n    height: 4rem;\n    background-color: #fff7ed;\n    border-radius: 8px;\n}\n\n.to-do-item > button {\n    grid-row: 1/3;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n    font-size: 1.3rem;\n    margin-left: 1rem;\n}\n\n.to-do-item > button:first-of-type,\n.to-do-item > button:last-of-type {\n    margin-right: 1rem;\n}\n\n.to-do-title {\n    font-family: 'Roboto-Bold';\n    font-weight: 700;\n    align-self: end;\n}\n\n.to-do-due-date {\n    grid-row: 2/3;\n    grid-column: 2/3;\n}\n\n.to-do-completed {\n    color: darkseagreen;\n}\n"],sourceRoot:""}]);const m=p},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(d[l]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&d[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},d=[],a=0;a<n.length;a++){var l=n[a],c=o.base?l[0]+o.base:l[0],A=r[c]||0,p="".concat(c," ").concat(A);r[c]=A+1;var s=t(p),g={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==s)e[s].references++,e[s].updater(g);else{var m=i(g,o);o.byIndex=a,e.splice(a,0,{identifier:p,updater:m,references:1})}d.push(p)}return d}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var d=0;d<r.length;d++){var a=t(r[d]);e[a].references--}for(var l=o(n,i),c=0;c<r.length;c++){var A=t(r[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=l}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},585:(n,e,t)=>{n.exports=t.p+"f80816a5455d171f948d.ttf"},296:(n,e,t)=>{n.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&(!n||!/^http(s?):/.test(n));)n=o[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),i=t.n(o),r=t(659),d=t.n(r),a=t(56),l=t.n(a),c=t(540),A=t.n(c),p=t(113),s=t.n(p),g=t(208),m={};m.styleTagTransform=s(),m.setAttributes=l(),m.insert=d().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=A(),e()(g.A,m),g.A&&g.A.locals&&g.A.locals;let u=function(){let n={};return{subscribe:function(e,t){n[e]||(n[e]=[]),n[e].push(t)},publish:function(e,t){n[e]&&n[e].forEach((n=>n(t)))},topics:n}}();function f(n,e){let t=JSON.stringify(e);localStorage.setItem(n,t)}function C(n){let e=localStorage.getItem(n);return JSON.parse(e)}function b(n){localStorage.setItem(n,(parseInt(localStorage.getItem(n))+1).toString())}function h(n,e,t){let o=document.createElement(n);return"object"==typeof e?e.forEach((n=>{o.classList.add(n)})):"string"==typeof e&&o.classList.add(e),o.innerHTML=t,o}function B(n,e,t,o){let i=document.createElement(n);return e&&i.classList.add(e),t.forEach((n=>{i.setAttribute(n[0],n[1])})),i.innerHTML=o,i}const I=document.querySelector("body"),v=document.querySelector("ul.sidebar"),y=document.querySelector("main");let j;function D(){console.log("Loading Sidebar");let n=C("projects");v.innerHTML="";let e=h("li",["sidebar-project","sidebar-active-project"],"All Projects");e.addEventListener("click",(()=>{E(),v.childNodes.forEach((n=>n.classList.remove("sidebar-active-project"))),e.classList.add("sidebar-active-project")})),v.appendChild(e),console.log(v),n.forEach((n=>{let e=h("li","sidebar-project",n.projectName);e.addEventListener("click",(()=>{v.childNodes.forEach((n=>n.classList.remove("sidebar-active-project"))),j=n.projectID,w(n),e.classList.add("sidebar-active-project")})),v.appendChild(e)}))}function w(n){let e=C("projects").find((e=>e.projectID==n.projectID));console.log(`Loading ${e.projectName}`),y.innerHTML="";let t=h("div","project-ribbon","");t.appendChild(h("div","project-name-title",e.projectName));let o=h("div","project-actions",""),i=h("button","add-to-do-button","New To Do");i.addEventListener("click",(()=>{!function(){C("projects");let n=h("dialog","to-do-creation","");n.appendChild(h("div","dialog-title","New To Do")),n.appendChild(B("label","",[["for","title"]],"Title"));let e=B("input","",[["id","title"]],"");n.appendChild(e),n.appendChild(B("label","",[["for","description"]],"Description"));let t=B("input","",[["id","description"]],"");n.appendChild(t),n.appendChild(B("label","",[["for","due-date"]],"Due Date"));let o=B("input","",[["id","due-date"],["type","date"]],"");n.appendChild(o),n.appendChild(B("label","",[["for","priority"]],"Priority"));let i=B("select","",[["id","priority"]],"");["Low","Medium","High"].forEach((n=>i.appendChild(B("option","",[["value",n]],`${n} priority`)))),n.appendChild(i),n.appendChild(B("label","",[["for","notes"]],"Notes"));let r=B("textarea","",[["id","notes"]],"");n.appendChild(r);let d=h("button","close-dialog","Cancel");d.addEventListener("click",(()=>n.remove())),n.appendChild(d);let a=h("button","create-to-do","Create To Do");a.addEventListener("click",(()=>{let d={projectID:j,title:e.value,description:t.value,dueDate:o.value,priority:i.value,notes:r.value};u.publish("toDoAdded",d);let a=C("projects");n.remove();let l=a.findIndex((n=>n.projectID==j));w(a[l])})),n.appendChild(a),n.classList.add("to-do-dialog"),I.appendChild(n),n.showModal()}()})),o.appendChild(i);let r=h("button","delete-project-button","Delete Project");r.addEventListener("click",(()=>{u.publish("projectDeleted",j),D(),E()})),o.appendChild(r),t.appendChild(o),y.appendChild(t),e.toDoList.forEach((t=>{let o=h("div","to-do-item",""),i=h("button","to-do-check","✅");i.addEventListener("click",(()=>{u.publish("toDoCompletion",t),o.classList.toggle("to-do-completed"),w(n)})),t.completed&&o.classList.add("to-do-completed"),o.appendChild(i),o.appendChild(h("div","to-do-title",t.title)),o.appendChild(h("div","to-do-due-date",`Due: ${t.dueDate.toString()}`));let r=h("button","to-do-info","ℹ️");r.addEventListener("click",(()=>k(t))),o.appendChild(r);let d=h("button","to-do-delete","🗑️");d.addEventListener("click",(()=>{u.publish("toDoDeleted",t);let n=C("projects").find((n=>n.projectID==e.projectID));w(n)})),o.appendChild(d),y.appendChild(o)}))}function E(){console.log("Loading all projects"),y.innerHTML="";let n=h("div","project-ribbon","");n.appendChild(h("div","project-name-title","All Projects")),y.appendChild(n),C("projects").forEach((n=>n.toDoList.forEach((n=>{let e=h("div","to-do-item",""),t=h("button","to-do-check","✅");t.addEventListener("click",(()=>{u.publish("toDoCompletion",n),e.classList.toggle("to-do-completed"),E()})),n.completed&&e.classList.add("to-do-completed"),e.appendChild(t),e.appendChild(h("div","to-do-title",n.title)),e.appendChild(h("div","to-do-due-date",`Due: ${n.dueDate.toString()}`));let o=h("button","to-do-info","ℹ️");o.addEventListener("click",(()=>k(n))),e.appendChild(o);let i=h("button","to-do-delete","🗑️");i.addEventListener("click",(()=>{u.publish("toDoDeleted",n),E()})),e.appendChild(i),y.appendChild(e)}))))}function k(n){let e,t=h("dialog","info-dialog","");t.appendChild(h("div","dialog-title",n.title)),t.appendChild(h("div","dialog-to-do-description",`Description: ${n.description}`)),t.appendChild(h("div","dialog-to-do-due-date",`Due: ${n.dueDate.toString()}`)),t.appendChild(h("div","dialog-to-do-priority",`Priority: ${n.priority}`)),e=n.completed?"Complete":"Incomplete",t.appendChild(h("div","dialog-to-do-completion",`Status: ${e}`)),t.appendChild(h("div","dialog-to-do-notes",`Notes: ${n.notes}`));let o=h("button","close-dialog","Close");o.addEventListener("click",(()=>t.remove())),t.appendChild(o),I.appendChild(t),t.showModal()}u.subscribe("toDoAdded",(function(n){console.log("Add to do");let e=C("projects"),t=e.findIndex((e=>e.projectID==n.projectID));n.completed=!1,n.toDoID=parseInt(localStorage.getItem("toDoID")),b("toDoID"),e[t].toDoList.push(n),f("projects",e),console.log("To do Added")})),u.subscribe("toDoDeleted",(function(n){console.log("To do deleted");let e=C("projects"),t=e.findIndex((e=>e.projectID==n.projectID)),o=e[t].toDoList.findIndex((e=>e.toDoID==n.toDoID));e[t].toDoList.splice(o,1),f("projects",e)})),u.subscribe("toDoCompletion",(function(n){console.log("To do completed");let e=C("projects"),t=e.findIndex((e=>e.projectID==n.projectID)),o=e[t].toDoList.findIndex((e=>e.toDoID==n.toDoID));e[t].toDoList[o].completed?e[t].toDoList[o].completed=!1:e[t].toDoList[o].completed=!0,f("projects",e)})),localStorage.getItem("toDoID")||localStorage.setItem("toDoID","0"),localStorage.getItem("projects")||(f("projects",[]),localStorage.setItem("projectID","0")),u.subscribe("projectAdded",(function(n){console.log("Project Added");let e=C("projects"),t={projectName:n,projectID:localStorage.getItem("projectID"),toDoList:[]};b("projectID"),e.push(t),function(n,e){let t=localStorage.getItem(n),o=JSON.parse(t);o.push(e),t=JSON.stringify(o),localStorage.setItem(n,t)}("projects",t)})),u.subscribe("projectDeleted",(function(n){console.log("Project deleted");let e=C("projects"),t=e.findIndex((e=>e.projectID==n));e.splice(t,1),console.log(e),f("projects",e)})),document.querySelector("button.add-project").addEventListener("click",(function(){let n=h("dialog","project-dialog","");n.appendChild(h("div","dialog-title","New Project")),n.appendChild(B("label","",[["for","name"]],"Project Name"));let e=B("input","",[["id","name"]],"");n.appendChild(e);let t=h("button","close-dialog","Cancel");t.addEventListener("click",(()=>n.remove())),n.appendChild(t);let o=h("button","create-project","Create Project");o.addEventListener("click",(()=>{u.publish("projectAdded",e.value),n.remove(),D()})),n.appendChild(o),I.appendChild(n),n.showModal()})),E(),D()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,